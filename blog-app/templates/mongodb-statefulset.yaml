apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.mongodb.mongoApp }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.mongodb.mongoApp }}
  serviceName: {{ .Values.mongodb.mongoSvc }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Values.mongodb.mongoApp }}
    spec:
      initContainers:
      - name: init-mongodb
        image: mongo:5.0
        command: ["mongo", "mongodb://mongodb.default.svc.cluster.local:27017/blog", "/init.js"]
        volumeMounts:
        - name: init-script
          mountPath: /init.js
          subPath: init.js
      containers:
      - name: {{ .Values.mongodb.mongoApp }}
        image: mongo:5.0
        ports:
        - containerPort: {{ .Values.mongodb.mongoPort }}
          name: {{ .Values.mongodb.mongoApp }}
        envFrom:
        - secretRef:
            name: mongo-secrets
        volumeMounts:
        - name: {{ .Values.mongodb.mongoPV }}
          mountPath: /data/db
        # - name: init-database
        #   mountPath: "/docker-entrypoint-initdb.d/"
      volumes:
      - name: init-script
        configMap:
          name: mongo-init-script
  volumeClaimTemplates:
  - metadata:
      name: {{ .Values.mongodb.mongoPV }}
    spec:
      storageClassName: {{ .Values.mongopv.scType }}
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{ .Values.mongopv.volSize }}
